
(:patch
 (:om-version 0.03)
 (:name "02-pm2-add-synth")
 (:doc "")
 (:info
  (:created "2019/09/23 23:05:26")
  (:modified "2019/09/23 23:55:03"))
 (:window (:size (875 524)) (:position (475 321)))
 (:grid nil)
 (:lock nil)
 (:boxes
  (:box
   (:type :value)
   (:reference single-float)
   (:group-id nil)
   (:name "aux 7")
   (:x 685)
   (:y 232)
   (:w 32)
   (:h 30)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 0.1)
   (:id 0))
  (:box
   (:type :object)
   (:reference chord-seq)
   (:group-id nil)
   (:name "CHORD-SEQ 2")
   (:x 422)
   (:y 169)
   (:w 199)
   (:h 93)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:name "CHORD-SEQ 2")
   (:display :mini-view)
   (:showname nil)
   (:show-markers t)
   (:group-id nil)
   (:lock :locked)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SELF")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "LMIDIC")
     (:value (:list 6000))
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "LONSET")
     (:value (:list 0 1000))
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "LDUR")
     (:value (:list 1000))
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "LVEL")
     (:value (:list 100))
     (:reactive nil))
    (:input
     (:type :key)
     (:name "loffset")
     (:value (:list 0))
     (:reactive nil))
    (:input
     (:type :key)
     (:name "lchan")
     (:value (:list 1))
     (:reactive nil))
    (:input (:type :key) (:name "llegato") (:value 0) (:reactive nil)))
   (:outputs
    (:output (:name "SELF") (:reactive nil))
    (:output (:name "LMIDIC") (:reactive nil))
    (:output (:name "LONSET") (:reactive nil))
    (:output (:name "LDUR") (:reactive nil))
    (:output (:name "LVEL") (:reactive nil))
    (:output (:name "loffset") (:reactive nil))
    (:output (:name "lchan") (:reactive nil))
    (:output (:name "llegato") (:reactive nil)))
   (:window (:size nil) (:position nil))
   (:edition-params (:staff :g))
   (:value
    (:object
     (:class chord-seq)
     (:slots
      ((:onset 0)
       (:duration 13783)
       (:interpol (:number-or-nil (:number 50) (:t-or-nil nil)))
       (:symbolic-date nil)
       (:symbolic-dur nil)
       (:symbolic-dur-extent 0)
       (:lmidic
        (:list
         (:list 5900 6600 7400 7800)
         (:list 6400 7400 7900)
         (:list 6900 7300 7800)
         (:list 7600)
         (:list 7800 6200 7400)
         (:list 7600)
         (:list 7400)
         (:list 7300)
         (:list 7100 6700)
         (:list 7600)
         (:list 7400 6400)
         (:list 7300)
         (:list 7400 6500)
         (:list 7100)
         (:list 7000 6600)
         (:list 6700)
         (:list 6600)
         (:list 6400)
         (:list 6200 6600 7100)))
       (:lonset
        (:list
         0
         1071
         2142
         2679
         3217
         4821
         5358
         5892
         6429
         6967
         7500
         8033
         8571
         9108
         9642
         11250
         11783
         12321
         12858
         13783))
       (:ldur
        (:list
         (:list 1071 1071 1071 1071)
         (:list 1071 1071 1071)
         (:list 1075 1075 537)
         (:list 538)
         (:list 1604 1604 1604)
         (:list 537)
         (:list 534)
         (:list 537)
         (:list 538 1071)
         (:list 533)
         (:list 533 1071)
         (:list 538)
         (:list 537 1071)
         (:list 534)
         (:list 1608 1608)
         (:list 533)
         (:list 538)
         (:list 537)
         (:list 925 925 925)))
       (:lvel
        (:list
         (:list 100 100 100 100)
         (:list 100 100 100)
         (:list 100 100 100)
         (:list 100)
         (:list 100 100 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100 100)
         (:list 100)
         (:list 100 100)
         (:list 100)
         (:list 100 100)
         (:list 100)
         (:list 100 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100 100 100)))
       (:loffset
        (:list
         (:list 0 0 0 0)
         (:list 0 0 0)
         (:list 0 0 0)
         (:list 0)
         (:list 0 0 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0 0)
         (:list 0)
         (:list 0 0)
         (:list 0)
         (:list 0 0)
         (:list 0)
         (:list 0 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0 0 0)))
       (:lchan
        (:list
         (:list 4 3 2 1)
         (:list 3 2 1)
         (:list 3 2 1)
         (:list 1)
         (:list 1 3 2)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1 3)
         (:list 1)
         (:list 1 3)
         (:list 1)
         (:list 1 3)
         (:list 1)
         (:list 1 3)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1 3 2)))
       (:lport
        (:list
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil))
       (:llegato nil)))
     (:add-slots
      ((:loffset
        (:list
         (:list 0 0 0 0)
         (:list 0 0 0)
         (:list 0 0 0)
         (:list 0)
         (:list 0 0 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0 0)
         (:list 0)
         (:list 0 0)
         (:list 0)
         (:list 0 0)
         (:list 0)
         (:list 0 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0 0 0)))
       (:lchan
        (:list
         (:list 4 3 2 1)
         (:list 3 2 1)
         (:list 3 2 1)
         (:list 1)
         (:list 1 3 2)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1 3)
         (:list 1)
         (:list 1 3)
         (:list 1)
         (:list 1 3)
         (:list 1)
         (:list 1 3)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1 3 2)))
       (:lport
        (:list
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil))
       (:llegato nil)))))
   (:id 1))
  (:box
   (:type :value)
   (:reference simple-base-string)
   (:group-id nil)
   (:name "aux 6")
   (:x 635)
   (:y 169)
   (:w 68)
   (:h 30)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value "cseq.aif")
   (:id 2))
  (:box
   (:type :function)
   (:reference outfile)
   (:group-id nil)
   (:name "outfile")
   (:x 634)
   (:y 200)
   (:w 70)
   (:h 30)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "NAME")
     (:value "")
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 3))
  (:box
   (:type :value)
   (:reference cons)
   (:group-id nil)
   (:name "aux 5")
   (:x 181)
   (:y 134)
   (:w 86)
   (:h 30)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value (:list 0.5 1.5 2.0))
   (:id 4))
  (:box
   (:type :value)
   (:reference cons)
   (:group-id nil)
   (:name "aux 4")
   (:x 125)
   (:y 133)
   (:w 53)
   (:h 30)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value (:list 1 2 3))
   (:id 5))
  (:box
   (:type :value)
   (:reference cons)
   (:group-id nil)
   (:name "aux 3")
   (:x 65)
   (:y 104)
   (:w 86)
   (:h 30)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value (:list 0.5 0.2 0.6))
   (:id 6))
  (:box
   (:type :value)
   (:reference cons)
   (:group-id nil)
   (:name "aux 2")
   (:x 8)
   (:y 137)
   (:w 95)
   (:h 30)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value (:list 400 500 700))
   (:id 7))
  (:box
   (:type :value)
   (:reference single-float)
   (:group-id nil)
   (:name "aux")
   (:x 272)
   (:y 1293/5)
   (:w 39)
   (:h 30)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 0.01)
   (:id 8))
  (:comment
   (:x 496)
   (:y 70)
   (:w 168)
   (:h 25)
   (:fgcolor (:color 0 0 0 1.0))
   (:bgcolor nil)
   (:border 0)
   (:roundness nil)
   (:text-font
    (:font-or-nil
     (:font (:font (:face "Calibri") (:size 14.0D0) (:style :plain)))
     (:t-or-nil t)))
   (:align nil)
   (:text "... or connect a CHORD-SEQ")
   (:id 9))
  (:comment
   (:x 67)
   (:y 21)
   (:w 230)
   (:h 30)
   (:fgcolor (:color 0 0 0 1.0))
   (:bgcolor nil)
   (:border 0)
   (:roundness nil)
   (:text-font
    (:font-or-nil
     (:font (:font (:face "Calibri") (:size 18.0D0) (:style :bold)))
     (:t-or-nil t)))
   (:align nil)
   (:text "OM-pm2 - Additive Synthesis")
   (:id 10))
  (:comment
   (:x 54)
   (:y 71)
   (:w 329)
   (:h 25)
   (:fgcolor (:color 0 0 0 1.0))
   (:bgcolor nil)
   (:border 0)
   (:roundness nil)
   (:text-font
    (:font-or-nil
     (:font (:font (:face "Calibri") (:size 14.0D0) (:style :plain)))
     (:t-or-nil t)))
   (:align nil)
   (:text "Generate the control data as an SDIF file or SDIF-frames")
   (:id 11))
  (:box
   (:library "om-pm2")
   (:type :function)
   (:reference pm2-add-synth)
   (:group-id nil)
   (:name "pm2-add-synth")
   (:x 210)
   (:y 311)
   (:w 112)
   (:h 30)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "PARTIALS")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :key)
     (:name "attack")
     (:value 0.01)
     (:reactive nil))
    (:input
     (:type :key)
     (:name "release")
     (:value 0.01)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 12))
  (:box
   (:type :object)
   (:reference sound)
   (:group-id nil)
   (:name "pm2-out.aiff")
   (:x 132)
   (:y 366)
   (:w 228)
   (:h 65)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:name "pm2-out.aiff")
   (:display :mini-view)
   (:showname nil)
   (:show-markers t)
   (:group-id nil)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SELF")
     (:value :choose-file)
     (:reactive nil))
    (:input
     (:type :key)
     (:name "markers")
     (:value nil)
     (:reactive nil)))
   (:outputs
    (:output (:name "SELF") (:reactive nil))
    (:output (:name "markers") (:reactive nil)))
   (:window (:size nil) (:position nil))
   (:edition-params)
   (:value
    (:object
     (:class sound)
     (:slots
      ((:onset 0)
       (:duration 0)
       (:interpol (:number-or-nil (:number 50) (:t-or-nil nil)))
       (:default-frame-type marker-frame)
       (:frames nil)
       (:buffer nil)
       (:n-samples nil)
       (:n-channels nil)
       (:sample-rate nil)
       (:smpl-type :float)
       (:sample-size 16)))
     (:add-slots
      ((:markers nil)
       (:file-pathname nil)
       (:sample-rate nil)
       (:n-channels nil)
       (:n-samples nil)
       (:gain 1.0)
       (:access-from-file nil)))))
   (:id 13))
  (:box
   (:library "om-pm2")
   (:type :function)
   (:reference pm2-add-synth)
   (:group-id nil)
   (:name "pm2-add-synth")
   (:x 615)
   (:y 284)
   (:w 112)
   (:h 30)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "PARTIALS")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :key)
     (:name "out")
     (:value "pm2-out.aiff")
     (:reactive nil))
    (:input
     (:type :key)
     (:name "attack")
     (:value 0.01)
     (:reactive nil))
    (:input
     (:type :key)
     (:name "release")
     (:value 0.01)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 14))
  (:box
   (:type :object)
   (:reference sound)
   (:group-id nil)
   (:name "cseq.aif")
   (:x 541)
   (:y 341)
   (:w 231)
   (:h 69)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:name "cseq.aif")
   (:display :mini-view)
   (:showname nil)
   (:show-markers t)
   (:group-id nil)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SELF")
     (:value :choose-file)
     (:reactive nil))
    (:input
     (:type :key)
     (:name "markers")
     (:value nil)
     (:reactive nil)))
   (:outputs
    (:output (:name "SELF") (:reactive nil))
    (:output (:name "markers") (:reactive nil)))
   (:window (:size nil) (:position nil))
   (:edition-params)
   (:value
    (:object
     (:class sound)
     (:slots
      ((:onset 0)
       (:duration 0)
       (:interpol (:number-or-nil (:number 50) (:t-or-nil nil)))
       (:default-frame-type marker-frame)
       (:frames nil)
       (:buffer nil)
       (:n-samples nil)
       (:n-channels nil)
       (:sample-rate nil)
       (:smpl-type :float)
       (:sample-size 16)))
     (:add-slots
      ((:markers nil)
       (:file-pathname nil)
       (:sample-rate nil)
       (:n-channels nil)
       (:n-samples nil)
       (:gain 1.0)
       (:access-from-file nil)))))
   (:id 15))
  (:box
   (:type :abstraction)
   (:reference
    (:patch
     (:om-version 0.03)
     (:name "generate-sdif-frames")
     (:doc "")
     (:info (:created nil) (:modified nil))
     (:window (:size (770 861)) (:position (518 270)))
     (:grid nil)
     (:lock nil)
     (:boxes
      (:box
       (:type :function)
       (:reference list)
       (:group-id nil)
       (:name "list")
       (:x 334)
       (:y 546)
       (:w 52)
       (:h 30)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :optional)
         (:name "x")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :optional)
         (:name "x")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 0))
      (:box
       (:type :special)
       (:reference collect)
       (:group-id nil)
       (:name "collect")
       (:x 338)
       (:y 581)
       (:w 82)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 0.82 0.7 0.7 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "data-in")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "push")
         (:value t)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "init")
         (:value nil)
         (:reactive nil)))
       (:outputs
        (:output (:name "collect") (:reactive nil))
        (:output (:name "data-out") (:reactive nil))
        (:output (:name "init") (:reactive nil)))
       (:id 1))
      (:box
       (:type :function)
       (:reference length)
       (:group-id nil)
       (:name "length")
       (:x 402)
       (:y 68)
       (:w 69)
       (:h 30)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "SEQUENCE")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 2))
      (:box
       (:type :object)
       (:reference sdifframe)
       (:group-id nil)
       (:name "SDIFFRAME")
       (:x 540)
       (:y 436)
       (:w 135)
       (:h 67)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:name "SDIFFRAME")
       (:display :hidden)
       (:showname nil)
       (:group-id nil)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "SELF")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "FRAMETYPE")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "FTIME")
         (:value 0.0)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "STREAMID")
         (:value 0)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "LMATRIX")
         (:value nil)
         (:reactive nil)))
       (:outputs
        (:output (:name "SELF") (:reactive nil))
        (:output (:name "FRAMETYPE") (:reactive nil))
        (:output (:name "FTIME") (:reactive nil))
        (:output (:name "STREAMID") (:reactive nil))
        (:output (:name "LMATRIX") (:reactive nil)))
       (:window (:size nil) (:position nil))
       (:edition-params)
       (:value
        (:object
         (:class sdifframe)
         (:slots
          ((:onset nil)
           (:item-time nil)
           (:item-internal-time nil)
           (:item-type nil)
           (:attributes nil)
           (:frametype "1MRK")
           (:ftime nil)
           (:streamid 0)
           (:lmatrix
            (:list
             (:object
              (:class sdifmatrix)
              (:slots
               ((:field-names nil)
                (:data (:list (:list nil)))
                (:matrixtype "1END")))
              (:add-slots ((:field-names nil))))))))))
       (:id 3))
      (:box
       (:type :value)
       (:reference simple-base-string)
       (:group-id nil)
       (:name "aux 6")
       (:x 554)
       (:y 393)
       (:w 57)
       (:h 30)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value "1MRK")
       (:id 4))
      (:box
       (:type :function)
       (:reference list)
       (:group-id nil)
       (:name "list")
       (:x 632)
       (:y 383)
       (:w 52)
       (:h 30)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :optional)
         (:name "x")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 5))
      (:box
       (:type :function)
       (:reference om+)
       (:group-id nil)
       (:name "om+")
       (:x 449)
       (:y 393)
       (:w 60)
       (:h 30)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "ARG1")
         (:value 0)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "ARG2")
         (:value 0)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 6))
      (:box
       (:type :function)
       (:reference list)
       (:group-id nil)
       (:name "list")
       (:x 246)
       (:y 353)
       (:w 52)
       (:h 30)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :optional)
         (:name "x")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :optional)
         (:name "x")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 7))
      (:box
       (:type :value)
       (:reference simple-base-string)
       (:group-id nil)
       (:name "aux 6")
       (:x 154)
       (:y 409)
       (:w 57)
       (:h 30)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value "1MRK")
       (:id 8))
      (:box
       (:type :object)
       (:reference sdifmatrix)
       (:group-id nil)
       (:name "SDIFMATRIX")
       (:x 568)
       (:y 240)
       (:w 150)
       (:h 65)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:name "SDIFMATRIX")
       (:display :hidden)
       (:showname nil)
       (:group-id nil)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "SELF")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "MATRIXTYPE")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "DATA")
         (:value nil)
         (:reactive nil)))
       (:outputs
        (:output (:name "SELF") (:reactive nil))
        (:output (:name "MATRIXTYPE") (:reactive nil))
        (:output (:name "DATA") (:reactive nil)))
       (:window (:size nil) (:position nil))
       (:edition-params)
       (:value
        (:object
         (:class sdifmatrix)
         (:slots
          ((:field-names nil)
           (:data (:list (:list nil)))
           (:matrixtype "1END")))
         (:add-slots ((:field-names nil)))))
       (:id 9))
      (:box
       (:type :value)
       (:reference simple-base-string)
       (:group-id nil)
       (:name "aux 5")
       (:x 610)
       (:y 210)
       (:w 55)
       (:h 30)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value "1END")
       (:id 10))
      (:box
       (:type :value)
       (:reference simple-base-string)
       (:group-id nil)
       (:name "aux 5")
       (:x 291)
       (:y 206)
       (:w 54)
       (:h 30)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value "1BEG")
       (:id 11))
      (:box
       (:type :object)
       (:reference sdifmatrix)
       (:group-id nil)
       (:name "SDIFMATRIX")
       (:x 248)
       (:y 241)
       (:w 150)
       (:h 65)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:name "SDIFMATRIX")
       (:display :hidden)
       (:showname nil)
       (:group-id nil)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "SELF")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "MATRIXTYPE")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "DATA")
         (:value nil)
         (:reactive nil)))
       (:outputs
        (:output (:name "SELF") (:reactive nil))
        (:output (:name "MATRIXTYPE") (:reactive nil))
        (:output (:name "DATA") (:reactive nil)))
       (:window (:size nil) (:position nil))
       (:edition-params)
       (:value
        (:object
         (:class sdifmatrix)
         (:slots
          ((:field-names nil)
           (:data (:list (:list nil)))
           (:matrixtype "1BEG")))
         (:add-slots ((:field-names nil)))))
       (:id 12))
      (:comment
       (:x 473)
       (:y 73)
       (:w 116)
       (:h 26)
       (:fgcolor (:color 0 0 0 1.0))
       (:bgcolor nil)
       (:border 0)
       (:roundness nil)
       (:text-font
        (:font (:face "Verdana") (:size 11) (:style :plain)))
       (:align nil)
       (:text "counter for indices")
       (:id 13))
      (:comment
       (:x 32)
       (:y 350)
       (:w 152)
       (:h 39)
       (:fgcolor (:color 0 0 0 1.0))
       (:bgcolor nil)
       (:border 0)
       (:roundness nil)
       (:text-font
        (:font (:face "Verdana") (:size 11) (:style :plain)))
       (:align nil)
       (:text
        "\"1TRC\" matrix fields = 
index, freq, amp, phase")
       (:id 14))
      (:box
       (:type :value)
       (:reference simple-base-string)
       (:group-id nil)
       (:name "aux 4")
       (:x 81)
       (:y 236)
       (:w 52)
       (:h 30)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value "1TRC")
       (:id 15))
      (:comment
       (:x 276)
       (:y 6)
       (:w 189)
       (:h 43)
       (:fgcolor (:color 0 0 0 1.0))
       (:bgcolor nil)
       (:border 0)
       (:roundness nil)
       (:text-font
        (:font-or-nil
         (:font (:font (:face "Calibri") (:size 12) (:style :plain)))
         (:t-or-nil t)))
       (:align nil)
       (:text
        "Simplified SDIF structure: 
each matrix contains only 1 partial")
       (:id 16))
      (:box
       (:type :object)
       (:reference sdifmatrix)
       (:group-id nil)
       (:name "SDIFMATRIX")
       (:x 27)
       (:y 271)
       (:w 171)
       (:h 67)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:name "SDIFMATRIX")
       (:display :hidden)
       (:showname nil)
       (:group-id nil)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "SELF")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "MATRIXTYPE")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "DATA")
         (:value nil)
         (:reactive nil)))
       (:outputs
        (:output (:name "SELF") (:reactive nil))
        (:output (:name "MATRIXTYPE") (:reactive nil))
        (:output (:name "DATA") (:reactive nil)))
       (:window (:size nil) (:position nil))
       (:edition-params)
       (:value
        (:object
         (:class sdifmatrix)
         (:slots
          ((:field-names nil)
           (:data (:list nil (:list nil) (:list nil) nil))
           (:matrixtype "1TRC")))
         (:add-slots ((:field-names nil)))))
       (:id 17))
      (:box
       (:type :object)
       (:reference sdifframe)
       (:group-id nil)
       (:name "SDIFFRAME")
       (:x 149)
       (:y 448)
       (:w 135)
       (:h 67)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:name "SDIFFRAME")
       (:display :hidden)
       (:showname nil)
       (:group-id nil)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "SELF")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "FRAMETYPE")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "FTIME")
         (:value 0.0)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "STREAMID")
         (:value 0)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "LMATRIX")
         (:value nil)
         (:reactive nil)))
       (:outputs
        (:output (:name "SELF") (:reactive nil))
        (:output (:name "FRAMETYPE") (:reactive nil))
        (:output (:name "FTIME") (:reactive nil))
        (:output (:name "STREAMID") (:reactive nil))
        (:output (:name "LMATRIX") (:reactive nil)))
       (:window (:size nil) (:position nil))
       (:edition-params)
       (:value
        (:object
         (:class sdifframe)
         (:slots
          ((:onset 0)
           (:item-time nil)
           (:item-internal-time nil)
           (:item-type nil)
           (:attributes nil)
           (:frametype nil)
           (:ftime 0.0)
           (:streamid 0)
           (:lmatrix nil)))))
       (:id 18))
      (:box
       (:type :special)
       (:reference iterate)
       (:group-id nil)
       (:name "iterate")
       (:x 299)
       (:y 639)
       (:w 57)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 0.82 0.85 0.7 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "action")
         (:value nil)
         (:reactive nil)))
       (:outputs)
       (:id 19))
      (:box
       (:type :special)
       (:reference loop-for)
       (:group-id nil)
       (:name "for")
       (:x 416)
       (:y 105)
       (:w 40)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 0.82 0.85 0.7 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "from")
         (:value 0)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "to")
         (:value 10)
         (:reactive nil)))
       (:outputs (:output (:name "i") (:reactive nil)))
       (:id 20))
      (:box
       (:type :special)
       (:reference loop-list)
       (:group-id nil)
       (:name "list-loop")
       (:x 137)
       (:y 84)
       (:w 65)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 0.82 0.85 0.7 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "list")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "i") (:reactive nil)))
       (:id 21))
      (:box
       (:type :special)
       (:reference loop-list)
       (:group-id nil)
       (:name "list-loop")
       (:x 478)
       (:y 323)
       (:w 65)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 0.82 0.85 0.7 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "list")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "i") (:reactive nil)))
       (:id 22))
      (:box
       (:type :special)
       (:reference loop-list)
       (:group-id nil)
       (:name "list-loop")
       (:x 401)
       (:y 323)
       (:w 65)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 0.82 0.85 0.7 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "list")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "i") (:reactive nil)))
       (:id 23))
      (:box
       (:type :special)
       (:reference loop-list)
       (:group-id nil)
       (:name "list-loop")
       (:x 54)
       (:y 68)
       (:w 65)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 0.82 0.85 0.7 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "list")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "i") (:reactive nil)))
       (:id 24))
      (:box
       (:type :io)
       (:reference
        (:in (:type omin) (:index 1) (:name "freqs") (:doc "")))
       (:group-id nil)
       (:name "freqs")
       (:x 62)
       (:y 0)
       (:w 49)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs)
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 25))
      (:box
       (:type :io)
       (:reference
        (:out (:type omout) (:name "output 1") (:index 1) (:doc "")))
       (:group-id nil)
       (:name "output 1")
       (:x 480)
       (:y 744)
       (:w 68)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "out-value")
         (:value nil)
         (:reactive nil)))
       (:outputs)
       (:id 26))
      (:box
       (:type :io)
       (:reference
        (:in (:type omin) (:index 2) (:name "amps") (:doc "")))
       (:group-id nil)
       (:name "amps")
       (:x 143)
       (:y 37)
       (:w 51)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs)
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 27))
      (:box
       (:type :io)
       (:reference
        (:in (:type omin) (:index 3) (:name "times") (:doc "")))
       (:group-id nil)
       (:name "times")
       (:x 407)
       (:y 260)
       (:w 51)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs)
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 28))
      (:box
       (:type :io)
       (:reference
        (:in (:type omin) (:index 4) (:name "durs") (:doc "")))
       (:group-id nil)
       (:name "durs")
       (:x 488)
       (:y 260)
       (:w 45)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs)
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 29))
      (:box
       (:type :function)
       (:reference flat)
       (:group-id nil)
       (:name "flat")
       (:x 1843/5)
       (:y 3188/5)
       (:w 54)
       (:h 30)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "LST")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 30))
      (:box
       (:type :value)
       (:reference symbol)
       (:group-id nil)
       (:name "aux 2")
       (:x 533)
       (:y 666)
       (:w 43)
       (:h 30)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value ftime)
       (:id 31))
      (:box
       (:type :value)
       (:reference symbol)
       (:group-id nil)
       (:name "aux")
       (:x 2489/5)
       (:y 3328/5)
       (:w 32)
       (:h 30)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value <)
       (:id 32))
      (:box
       (:type :function)
       (:reference sort-list)
       (:group-id nil)
       (:name "sort-list")
       (:x 482)
       (:y 3508/5)
       (:w 75)
       (:h 30)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "LST")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :key)
         (:name "test")
         (:value (:list quote <))
         (:reactive nil))
        (:input
         (:type :key)
         (:name "key")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 33))
      (:box
       (:type :function)
       (:reference list)
       (:group-id nil)
       (:name "list")
       (:x 60)
       (:y 124)
       (:w 52)
       (:h 30)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :optional)
         (:name "x")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 34))
      (:box
       (:type :function)
       (:reference list)
       (:group-id nil)
       (:name "list")
       (:x 143)
       (:y 142)
       (:w 52)
       (:h 30)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :optional)
         (:name "x")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 35))
      (:box
       (:type :function)
       (:reference list)
       (:group-id nil)
       (:name "list")
       (:x 110)
       (:y 199)
       (:w 106)
       (:h 30)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :optional)
         (:name "x")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :optional)
         (:name "x")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :optional)
         (:name "x")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :optional)
         (:name "x")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 36))
      (:box
       (:type :function)
       (:reference list)
       (:group-id nil)
       (:name "list")
       (:x 405)
       (:y 150)
       (:w 52)
       (:h 30)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :optional)
         (:name "x")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 37))
      (:box
       (:type :function)
       (:reference list)
       (:group-id nil)
       (:name "list")
       (:x 405)
       (:y 197)
       (:w 52)
       (:h 30)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :optional)
         (:name "x")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 38))
      (:box
       (:type :function)
       (:reference list)
       (:group-id nil)
       (:name "list")
       (:x 655)
       (:y 198)
       (:w 52)
       (:h 30)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :optional)
         (:name "x")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 39))
      (:box
       (:type :value)
       (:reference cons)
       (:group-id nil)
       (:name "value box")
       (:x 185)
       (:y 166)
       (:w 32)
       (:h 30)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value (:list 0))
       (:id 40)))
     (:connections
      (:connection
       (:from (:box 0 :out 0))
       (:to (:box 1 :in 0))
       (:attributes (:color nil :style nil :modif nil)))
      (:connection
       (:from (:box 1 :out 0))
       (:to (:box 19 :in 0))
       (:attributes (:color nil :style nil :modif nil)))
      (:connection
       (:from (:box 1 :out 1))
       (:to (:box 30 :in 0))
       (:attributes (:color nil :style nil :modif nil)))
      (:connection
       (:from (:box 2 :out 0))
       (:to (:box 20 :in 1))
       (:attributes (:color nil :style nil :modif nil)))
      (:connection
       (:from (:box 3 :out 0))
       (:to (:box 0 :in 1))
       (:attributes (:color nil :style nil :modif nil)))
      (:connection
       (:from (:box 4 :out 0))
       (:to (:box 3 :in 1))
       (:attributes (:color nil :style nil :modif nil)))
      (:connection
       (:from (:box 5 :out 0))
       (:to (:box 3 :in 4))
       (:attributes (:color nil :style nil :modif nil)))
      (:connection
       (:from (:box 6 :out 0))
       (:to (:box 3 :in 2))
       (:attributes (:color nil :style nil :modif nil)))
      (:connection
       (:from (:box 7 :out 0))
       (:to (:box 18 :in 4))
       (:attributes (:color nil :style nil :modif nil)))
      (:connection
       (:from (:box 8 :out 0))
       (:to (:box 18 :in 1))
       (:attributes (:color nil :style nil :modif nil)))
      (:connection
       (:from (:box 9 :out 0))
       (:to (:box 5 :in 0))
       (:attributes (:color nil :style nil :modif nil)))
      (:connection
       (:from (:box 10 :out 0))
       (:to (:box 9 :in 1))
       (:attributes (:color nil :style nil :modif nil)))
      (:connection
       (:from (:box 11 :out 0))
       (:to (:box 12 :in 1))
       (:attributes (:color nil :style nil :modif nil)))
      (:connection
       (:from (:box 12 :out 0))
       (:to (:box 7 :in 1))
       (:attributes (:color nil :style nil :modif nil)))
      (:connection
       (:from (:box 15 :out 0))
       (:to (:box 17 :in 1))
       (:attributes (:color nil :style nil :modif nil)))
      (:connection
       (:from (:box 17 :out 0))
       (:to (:box 7 :in 0))
       (:attributes (:color nil :style nil :modif nil)))
      (:connection
       (:from (:box 18 :out 0))
       (:to (:box 0 :in 0))
       (:attributes (:color nil :style nil :modif nil)))
      (:connection
       (:from (:box 20 :out 0))
       (:to (:box 37 :in 0))
       (:attributes (:color nil :style nil :modif nil)))
      (:connection
       (:from (:box 21 :out 0))
       (:to (:box 35 :in 0))
       (:attributes (:color nil :style nil :modif nil)))
      (:connection
       (:from (:box 22 :out 0))
       (:to (:box 6 :in 1))
       (:attributes (:color nil :style nil :modif nil)))
      (:connection
       (:from (:box 23 :out 0))
       (:to (:box 6 :in 0))
       (:attributes (:color nil :style nil :modif nil)))
      (:connection
       (:from (:box 23 :out 0))
       (:to (:box 18 :in 2))
       (:attributes (:color nil :style nil :modif nil)))
      (:connection
       (:from (:box 24 :out 0))
       (:to (:box 34 :in 0))
       (:attributes (:color nil :style nil :modif nil)))
      (:connection
       (:from (:box 25 :out 0))
       (:to (:box 2 :in 0))
       (:attributes (:color nil :style nil :modif nil)))
      (:connection
       (:from (:box 25 :out 0))
       (:to (:box 24 :in 0))
       (:attributes (:color nil :style nil :modif nil)))
      (:connection
       (:from (:box 27 :out 0))
       (:to (:box 21 :in 0))
       (:attributes (:color nil :style nil :modif nil)))
      (:connection
       (:from (:box 28 :out 0))
       (:to (:box 23 :in 0))
       (:attributes (:color nil :style nil :modif nil)))
      (:connection
       (:from (:box 29 :out 0))
       (:to (:box 22 :in 0))
       (:attributes (:color nil :style nil :modif nil)))
      (:connection
       (:from (:box 30 :out 0))
       (:to (:box 33 :in 0))
       (:attributes (:color nil :style nil :modif nil)))
      (:connection
       (:from (:box 31 :out 0))
       (:to (:box 33 :in 2))
       (:attributes (:color nil :style nil :modif nil)))
      (:connection
       (:from (:box 32 :out 0))
       (:to (:box 33 :in 1))
       (:attributes (:color nil :style nil :modif nil)))
      (:connection
       (:from (:box 33 :out 0))
       (:to (:box 26 :in 0))
       (:attributes (:color nil :style nil :modif nil)))
      (:connection
       (:from (:box 34 :out 0))
       (:to (:box 36 :in 1))
       (:attributes (:color nil :style nil :modif nil)))
      (:connection
       (:from (:box 35 :out 0))
       (:to (:box 36 :in 2))
       (:attributes (:color nil :style nil :modif nil)))
      (:connection
       (:from (:box 36 :out 0))
       (:to (:box 17 :in 2))
       (:attributes (:color nil :style nil :modif nil)))
      (:connection
       (:from (:box 37 :out 0))
       (:to (:box 36 :in 0))
       (:attributes (:color nil :style nil :modif nil)))
      (:connection
       (:from (:box 37 :out 0))
       (:to (:box 38 :in 0))
       (:attributes (:color nil :style nil :modif nil)))
      (:connection
       (:from (:box 37 :out 0))
       (:to (:box 39 :in 0))
       (:attributes (:color nil :style nil :modif nil)))
      (:connection
       (:from (:box 38 :out 0))
       (:to (:box 12 :in 2))
       (:attributes (:color nil :style nil :modif nil)))
      (:connection
       (:from (:box 39 :out 0))
       (:to (:box 9 :in 2))
       (:attributes (:color nil :style nil :modif nil)))
      (:connection
       (:from (:box 40 :out 0))
       (:to (:box 36 :in 3))
       (:attributes (:color nil :style nil :modif nil))))))
   (:group-id nil)
   (:name "generate-sdif-frames")
   (:x 54)
   (:y 953/5)
   (:w 140)
   (:h 105)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :mini-view)
   (:group-id nil)
   (:lock nil)
   (:lambda nil)
   (:pre-delay 0)
   (:inputs
    (:input
     (:type :standard)
     (:name "freqs")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "amps")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "times")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "durs")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "output 1") (:reactive nil)))
   (:id 16)))
 (:connections
  (:connection
   (:from (:box 0 :out 0))
   (:to (:box 14 :in 2))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 0 :out 0))
   (:to (:box 14 :in 3))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 1 :out 0))
   (:to (:box 14 :in 0))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 2 :out 0))
   (:to (:box 3 :in 0))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 3 :out 0))
   (:to (:box 14 :in 1))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 4 :out 0))
   (:to (:box 16 :in 3))
   (:attributes
    (:color (:color 0.2 0.4 0.5 1.0) :style nil :modif nil)))
  (:connection
   (:from (:box 5 :out 0))
   (:to (:box 16 :in 2))
   (:attributes
    (:color (:color 0.2 0.4 0.5 1.0) :style nil :modif nil)))
  (:connection
   (:from (:box 6 :out 0))
   (:to (:box 16 :in 1))
   (:attributes
    (:color (:color 0.2 0.4 0.5 1.0) :style nil :modif nil)))
  (:connection
   (:from (:box 7 :out 0))
   (:to (:box 16 :in 0))
   (:attributes
    (:color (:color 0.2 0.4 0.5 1.0) :style nil :modif nil)))
  (:connection
   (:from (:box 8 :out 0))
   (:to (:box 12 :in 1))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 8 :out 0))
   (:to (:box 12 :in 2))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 12 :out 0))
   (:to (:box 13 :in 0))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 14 :out 0))
   (:to (:box 15 :in 0))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 16 :out 0))
   (:to (:box 12 :in 0))
   (:attributes (:color nil :style nil :modif nil)))))